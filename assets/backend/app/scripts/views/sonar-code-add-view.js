// Generated by CoffeeScript 1.6.2
define(['backbone', 'text!templates/sonar-code-add-template.html', 'backboneValidationBootstrap', 'moment', 'jqueryPlugins/jquery.chosen.min'], function(Backbone, SonarCodeAddTemplate, BackboneValidationBootstrap, mm, jqform, chosen) {
  var View;

  View = Backbone.View.extend({
    id: 'sonar-code-add-view',
    events: {
      'submit form.sonar-code-add-form': 'addNewSonarCode',
      'click .box-header': 'minimize',
      'change #sonar-code-add-company': 'fetchBranches'
    },
    initialize: function() {
      _.bindAll(this);
      this.model = new window.backend.Models.SonarCodeModel;
      Backbone.Validation.bind(this);
      this.companyCollection = _.clone(window.backend.Collections.CompanyCollection);
      this.companyCollection.bind('reset', this.listCompanies);
      this.companyCollection.fetch();
      this.branchCollection = _.clone(window.backend.Collections.BranchCollection);
      return this.branchCollection.bind('reset', this.listBranches);
    },
    minimize: function(e) {
      var $target;

      e.preventDefault();
      $target = this.$el.find('.box-content');
      if ($target.is(':visible')) {
        this.$('.box-header .btn-minimize i').removeClass('icon-chevron-up').addClass('icon-chevron-down');
      } else {
        this.listCompanies();
        this.$('[data-rel="chosen"],[rel="chosen"]').chosen();
        this.$('.box-header .btn-minimize i').removeClass('icon-chevron-down').addClass('icon-chevron-up');
      }
      $target.slideToggle();
      return this.$("form :input:visible:enabled:first").focus();
    },
    addNewSonarCode: function(e) {
      var newSonarCode,
        _this = this;

      e.preventDefault();
      newSonarCode = {
        id: this.$('#sonar-code-add-id').val(),
        title: this.$('#sonar-code-add-title').val(),
        data: this.$('#sonar-code-add-data').val(),
        company: this.$('#sonar-code-add-company').val(),
        branch: this.$('#sonar-code-add-branch').val(),
        status: 'pending',
        created_at: (new Date()).getTime() / 1000 << 0,
        installed_at: null,
        info: {}
      };
      console.log(newSonarCode);
      if (this.model.set(newSonarCode)) {
        return this.model.save(null, {
          success: function() {
            window.backend.Collections.SonarCodeCollection.add(_this.model.clone());
            return _this.render();
          }
        });
      }
    },
    listCompanies: function() {
      var _this = this;

      this.$('#sonar-code-add-company').html('<option value="">Select Company</option>');
      this.companyCollection.each(function(model) {
        return _this.$('#sonar-code-add-company').append('<option value="' + model.get('company_id') + '">' + model.get('company_name') + '</option>');
      });
      return this.$('#sonar-code-add-company').trigger("liszt:updated");
    },
    fetchBranches: function() {
      var companyId;

      companyId = this.$('#sonar-code-add-company').val();
      this.branchCollection.filter = {
        company_id: companyId
      };
      return this.branchCollection.fetch();
    },
    listBranches: function() {
      var _this = this;

      this.$('#sonar-code-add-branch').html('<option value="">Select Branch</option>');
      if (!this.branchCollection.models.length) {
        this.$('#sonar-code-add-branch').html('<option value="">No Branch</option>');
      }
      this.branchCollection.each(function(model) {
        console.log(model.attributes);
        return _this.$('#sonar-code-add-branch').append('<option value="' + model.id + '">' + model.get('title') + '</option>');
      });
      return this.$('#sonar-code-add-branch').trigger("liszt:updated");
    },
    render: function() {
      this.$el.html(_.template(SonarCodeAddTemplate, {}));
      this.delegateEvents();
      if (this.$('.datepicker')) {
        this.$('.datepicker').datepicker();
      }
      this.rendered = true;
      return this;
    }
  });
  return View;
});
